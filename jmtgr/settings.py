"""
Django settings for jmtgr project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'oewml!gq)&$5)ee+&04lv_8@r#1^7ft1=o=*yq0*%n$9mu0q^-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'api',
    'user',
    'certificate',
    'corsheaders', #CORS추가
]

CORS_ORIGIN_ALLOW_ALL = True #CORS추가
CORS_ALLOW_CREDENTIALS = True #CORS추가

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        #'rest_framework.permissions.IsAuthenticated',#추가
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',#추가
        'rest_framework.authentication.BasicAuthentication',#추가
    ),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware', #CORS추가
]

ROOT_URLCONF = 'jmtgr.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jmtgr.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }

    'default': {
     'ENGINE': 'django.db.backends.mysql',
     'NAME': 'jmtgrdb',  # DB명
     'USER': 'multicampusjmtgr',  # 데이터베이스 계정
     'PASSWORD': 'JMtgr1117',   # 계정 비밀번호
     'HOST': 'jmtgr.cij2xpo0vglc.us-east-1.rds.amazonaws.com',  # 데이테베이스 IP
     'PORT': '3306',  # 데이터베이스 port
     }

}


# JWT
# https://github.com/meh9184/django-react-todo-manager
# JWT_SECRET_KEY : JWT_SECRET_KEY는 Django 프로젝트의 SECRET_KEY로 사용
# JWT_ALGORITHM : 암호화 함수는 HS256으로 설정
# JWT_VERIFY_EXPIRATION : JWT 검증시, 만료 기간 확인
# JWT_ALLOW_REFRESH : JWT 갱신 허용
# JWT_EXPIRATION_DELTA : Access Token의 만료 시간은 10분으로 설정. 10분 지나면 토큰 만료되고, 리소스 접근시 자동 로그아웃
# JWT_REFRESH_EXPIRATION_DELTA : Refresh Token의 만료 시간은 1시간으로 설정. Access Token이 만료되기 전에 계속해서 갱신 가능하지만 1시간 지나면 더이상 갱신 불가
# JWT_RESPONSE_PAYLOAD_HANDLER : JWT Paylod 핸들링 할때 미들웨어 커스텀 핸들러 my_jwt_response_handler 거치도록 설정

# JWT_AUTH = {
#    'JWT_SECRET_KEY': SECRET_KEY,
#    'JWT_ALGORITHM': 'HS256',
#    'JWT_VERIFY_EXPIRATION' : True,
#    'JWT_ALLOW_REFRESH': True,
#    'JWT_EXPIRATION_DELTA': datetime.timedelta(minutes=10),
#    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(hours=1),
#    'JWT_RESPONSE_PAYLOAD_HANDLER': 'api.custom_responses.my_jwt_response_handler'
# }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
